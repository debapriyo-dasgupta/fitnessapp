pipeline 
{
    agent any
    environment 
    {
        git_dev_branch_name = 'master'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')  // Jenkins credentials ID for Docker Hub
    }    
    stages 
    {
        stage('Initialize') {
            steps {
                script {
                    // Define the Docker tool's home directory
                    def dockerHome = tool name: 'docker'

                    // Update the PATH environment variable to include the Docker binary directory
                    env.PATH = "${dockerHome}/bin:${env.PATH}"
                }
            }
        }
        stage('Build APIGW Image') {
            steps {
                script {
                    // Source the shell script and read version and image name
                    def versionInfo = sh(script: '. infra/pipeline/common.lib/utils/get-version.sh && get-version "applications/apigateway/version.txt"', returnStdout: true).trim()
                    def (VERSION, IMAGE_NAME) = versionInfo.tokenize(' ')

                    // Use the Docker tool
                    docker.withTool('docker') {
                        // Build the Docker image
                        def customImage = docker.build("${IMAGE_NAME}:${VERSION}")
                    }
                }
            }
        }
        stage('BASE IMAGE BUILD') 
        {         
            steps 
            {
                script
                {
                    img='httpd:2.4-alpine'
                    docker.image("${img}").run('-d -p 80:80')
                }
            }
        }            
    }                                   
    post 
    { 
        always 
        { 
            cleanWs()
        }
    }       
}